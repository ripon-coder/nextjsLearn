import type { Metadata } from "next";
import Image from "next/image";
import { fetchUpcomingQuiz } from "@/app/lib/api/upComingQuizApi";
import { formatDateToDDMMYYYY } from "@/app/lib/helper";

const BASE_URL = process.env.NEXT_PUBLIC_URL ?? "";
export const metadata: Metadata = {
  title: "Upcoming Quizzes",
  description: "Generated by create next app",
};
export default async function UpcomingQuiz() {
  let upComingQuiz: any = [];
  try {
    upComingQuiz = await fetchUpcomingQuiz();
  } catch (error) {
    console.error("Failed to fetch upcoming quizzes", error);
    return <p className="text-gray-400 pt-4">Failed to load quizzes.</p>;
  }

  return (
    <>
      {upComingQuiz?.length > 0 ? (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 px-8 py-8 bg-black">
          {upComingQuiz.map((quiz: any) => (
            <div
              key={quiz.id}
              className="pt-1.5 px-4 bg-black border-2 border-gray-700 rounded-sm"
            >
              <div className="w-full aspect-video my-4 relative">
                {/* If you want video playback: */}
                {/* {quiz.home_content?.video ? (
                  <div
                    className="w-full h-full"
                    dangerouslySetInnerHTML={{
                      __html: quiz.home_content.video
                        .replace(/width="\d+"/, 'width="100%"')
                        .replace(/height="\d+"/, 'height="100%"'),
                    }}
                  />
                ) : ( */}
                <Image
                  src={`${BASE_URL}/homeImg/${quiz.home_content.img}`}
                  alt={quiz.title}
                  fill
                  className="object-cover"
                />
                {/* )} */}
              </div>

              <h1 className="text-white text-center py-1 text-lg font-bold">
                {quiz.title}
              </h1>
              <ul className="text-sm py-3 text-[#afa5a5] italic">
                <li className="pt-1.5">
                  Quiz Play Time:{" "}
                  <span className="text-[12px] text-[#34cc21]">
                    {formatDateToDDMMYYYY(quiz.start_date)} -{" "}
                    {formatDateToDDMMYYYY(quiz.end_date)} {quiz.end_time}
                  </span>
                </li>
                <li className="pt-1.5">
                  Total Prize Money:{" "}
                  <span className="text-[#34cc21]">${quiz.price}</span>
                </li>
                <li className="pt-1.5">
                  Total Winner:{" "}
                  <span className="text-[#34cc21]">{quiz.person}</span>
                </li>
                <li className="pt-1.5">
                  1<sup>st</sup> Top Scorer Will Get:{" "}
                  <span className="text-[#34cc21]">
                    ${quiz.first_top_money ?? 0}
                  </span>
                </li>
                <li className="pt-1.5">
                  2<sup>nd</sup> Top Scorer Will Get:{" "}
                  <span className="text-[#34cc21]">
                    ${quiz.second_top_money ?? 0}
                  </span>
                </li>
                <li className="pt-1.5">
                  3<sup>rd</sup> Top Scorer Will Get:{" "}
                  <span className="text-[#34cc21]">
                    ${quiz.third_top_money ?? 0}
                  </span>
                </li>
                <li className="pt-1.5">
                  Total Question:{" "}
                  <span className="text-[#34cc21]">{quiz.total_quistion}</span>
                </li>
                <li className="pt-1.5">
                  Every Question Mark:{" "}
                  <span className="text-[#34cc21]">{quiz.mark}</span>
                </li>
              </ul>
            </div>
          ))}
        </div>
      ) : (
        <div className="flex flex-col items-center justify-center py-16 px-6 bg-black  w-full max-w-full mx-auto h-86">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-16 w-16 text-gray-600 mb-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            strokeWidth={2}
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M9.75 17L15 12m0 0l-5.25-5M15 12H3"
            />
          </svg>
          <p className="text-gray-400 text-center text-lg font-semibold max-w-4xl w-full">
            No upcoming quizzes found at the moment.
          </p>
          <p className="text-gray-500 mt-2 text-center text-sm max-w-4xl w-full">
            Please check back later or explore other sections.
          </p>
        </div>
      )}
    </>
  );
}
